$version 6.60

// The bell component will be used when assembling the application.
// The class representing the bell component is named 'BellComponent' and is located \
// inside the unit 'Application'. Therefore the class name is Application::BellComponent.
$rect <23,108,233,148>
$output false
class PushButtonComponent : Core::Group
{
  // The property 'Bounds' defines the position and the size of bell component view.
  // The view is 200 px wide and 150 px high, its origin is <0, 0>.
  $rect <-2,166,198,206>
  inherited property Bounds = <0,0,210,150>;

  $rect <-2,214,200,250>
  inherited property Focus = null;

  // White background of the bell component.
  // This element has to stay in the background, therefore it must be its ordered \
  // below the other elements.
  // Have a look at the inspector window: the order to the background element is \
  // 92, while all other elements of the component do have higher order numbers.
  // If you inadvertently placed the element in the front, click on the element in \
  // the inspector window to select it.
  // Then press CTRL + cursor down to bring it one level down in the order hierarchy. \
  // You may have to press CTRL + cursor down several times to bring it to the background \
  // step by step.
  $rect <20,20,160,60>
  object Views::Rectangle Background
  {
    preset Bounds = <0,0,210,150>;
  }

  // Border of the bell component.
  $rect <20,20,160,60>
  object Views::Border Border
  {
    preset Bounds = <0,0,210,150>;
    preset Width = 1;
    preset Color = #000000FF;
  }

  // Push button of the push button component.
  // Inside the inspector window, the Property 'OnActivate' of this object
  // was assigned to the slot method 'PushTheButtonSlot'.
  // Therefore this slot method will called once the button was activated (= pressed).
  // The 'PushTheButtonSlot' slot method then will signal the SlotProperty.
  $rect <20,20,160,60>
  object WidgetSet::PushButton PushButton
  {
    preset Bounds = <29,76,179,126>;
    preset Focus = null;
    preset OnActivate = PushTheButtonSlot;
    preset Label = "Action";
    preset Appearance = WidgetSet::PushButton_Small;
  }

  // Header text of the bell component.
  // Can be set via the Header property.
  $rect <20,20,160,60>
  object Views::Text Heading
  {
    preset Bounds = <51,15,162,51>;
    preset AutoSize = true;
    preset String = "Heading";
    preset Font = Resources::FontLarge;
    preset Color = #010101FF;
  }

  // This slot method is invoked once the push button is pressed (= activated).
  $rect <239,221,439,261>
  slot PushTheButtonSlot
  {
    signal ActionButton;
  }

  // Slot method(s)
  note group SlotMethods
  {
    attr Bounds = <220,180,460,280>;
  }

  $rect <652,120,852,160>
  onget ActionButton
  {
    return pure ActionButton;
  }

  $rect <652,80,852,120>
  onset ActionButton
  {
    // The value doesn't change - nothing to do.
    if ( pure ActionButton == value )
      return;

    // Remember the property's new value.
    pure ActionButton = value;

    PushButton.OnActivate = value;
  }

  // The 
  $rect <652,40,852,80>
  property slot ActionButton = null;

  $rect <444,120,644,160>
  onget LabelButton
  {
    return pure TextHeader;
  }

  $rect <444,80,644,120>
  onset LabelButton
  {
    // The value doesn't change - nothing to do.
    if ( pure TextHeader == value )
      return;

    // Remember the property's new value.
    pure TextHeader = value;

    PushButton.Label = value;
  }

  $rect <444,40,644,80>
  property string LabelButton = "Label";

  $rect <234,120,434,160>
  onget TextHeader
  {
    return pure TextHeader;
  }

  $rect <234,80,434,120>
  onset TextHeader
  {
    // The value doesn't change - nothing to do.
    if ( pure TextHeader == value )
      return;

    // Remember the property's new value.
    pure TextHeader = value;

    Heading.String = value;
  }

  $rect <234,40,434,80>
  property string TextHeader = "Header";

  // Properties
  note group NoteProperties
  {
    attr Bounds = <220,0,870,170>;
  }
}
